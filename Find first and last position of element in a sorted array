class Solution {
public:
        
    int startSearch(vector<int>& nums, int target)
    {
            int low = 0;
            int high = nums.size()-1;
            
            while(low<=high)
            {
                    int mid = (low+high)/2;
                    
                    if(nums[mid]==target)
                    {
                          if(mid==0 || nums[mid]!=nums[mid-1])
                          {
                                  return mid;
                          }
                            
                           else
                           {
                                 high = mid-1;  
                           }
                    }
                    
                    else if(nums[mid]<target)
                    {
                            low = mid+1;
                    }
                    
                    else
                    {
                            high = mid-1;
                    }
            }
            
            return -1;
    }
        
      int endSearch(vector<int>& nums, int target)
    {
            int low = 0;
            int high = nums.size()-1;
            
            while(low<=high)
            {
                    int mid = (low+high)/2;
                    
                    if(nums[mid]==target)
                    {
                          if(mid==nums.size()-1 || nums[mid]!=nums[mid+1])
                          {
                                  return mid;
                          }
                            
                           else
                           {
                                 low = mid+1;  
                           }
                    }
                    
                    else if(nums[mid]<target)
                    {
                            low = mid+1;
                    }
                    
                    else
                    {
                            high = mid-1;
                    }
            }
            
            return -1;
    }  
        
        
    vector<int> searchRange(vector<int>& nums, int target) 
    {
        vector<int> indices;
        int index1 = startSearch(nums,target);
        int index2 = endSearch(nums,target);
        
            indices.push_back(index1);
            indices.push_back(index2);
            
            return indices;
    }
};
