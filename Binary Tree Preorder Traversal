class Solution {
public:
    vector<int> preorderTraversal(TreeNode* root) 
    {
            vector <int> list;
            preorder(root,list);
            return list;
    }
        
    void preorder(TreeNode* root, vector<int> &list)
    {
            list.push_back(root->val);
            
            if(root->left!=NULL)
            {
                preorder(root->left, list);
            }
            
            if(root->right != NULL)
            {
                    pr
            }
            
                
    }
//         stack <TreeNode*> s;
//         vector <int> preorder;
        
//         if(root==NULL)
//         {
//                 return {};
//         }
            
//         while(1)
//         {
//                 if(root!=NULL)
//                 {
//                                 s.push(root);      
//                                 preorder.push_back(root->val);
//                                 root = root->left;
//                 }
                        
//                 else 
//                 {
//                         if(s.empty())
//                         {
//                                 break;
//                         }
                        
//                         TreeNode* k = s.top();
//                         s.pop();
//                         root = k->right;
//                 }
                
//         }
            
//             return preorder;
      
//     }
};
