class Solution {
public:
      int count = 0;
      TreeNode* prein(vector<int> &preorder, vector<int> &inorder, int s, int e)
    {
        int index;
            
        if(s>e)
        {
                return NULL;
        }
            
        TreeNode *root = new TreeNode(preorder[count++]);
            
        for(int i = s; i <= e; i++)
        {
                if(root->val == inorder[i])
                {
                        index = i;
                        break;
                }
        }
            
            root->left = prein(preorder,inorder,s,index-1);
            root->right = prein(preorder, inorder,index+1,e);
            return root;
    }
        
    TreeNode* buildTree(vector<int>& preorder, vector<int>& inorder) 
    {
       int start = 0;
       int end = preorder.size() - 1;
       TreeNode* rootnode = prein(preorder,inorder,start,end);
       return rootnode;
    }
    
        
  
};
