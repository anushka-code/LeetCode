class Solution {
public:
    int search(vector<int>& nums, int target)
    {
        int low = 0;
        int high = nums.size() - 1;
        int n = nums.size() - 1;
        
        while(low <= high){
            int mid = low + (high - low)/2;
            cout<<mid<<" ";
            if (target == nums[mid]){
                return mid;
            } else if (nums[mid] >= nums[0] && nums[mid] <= nums[n]){
                if (target > nums[mid]){
                    low = mid + 1;
                } else {
                    high = mid - 1;
                }
            } else if (nums[mid] >= nums[0] && nums[mid] >= nums[n]){
                if (target > nums[mid]){
                    low = mid + 1;
                } else if (target >= nums[0]){
                    high = mid - 1;
                } else {
                    low = mid + 1;
                }
            } else if (nums[mid] <= nums[n] && nums[mid] <= nums[0]){
                if (target < nums[mid]){
                    high = mid - 1;
                } else if (target >= nums[0]){
                    high = mid - 1;
                } else {
                    low = mid + 1;
                }
            } 
        }
        return -1;
        
    }
};
